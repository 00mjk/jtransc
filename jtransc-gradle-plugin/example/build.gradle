apply plugin: "java"
apply plugin: "jtransc"
apply plugin: 'application'

ext.jtranscVersion = "0.2.5"

mainClassName = "HelloWorld"

/*
apply plugin: GreetingPlugin

class GreetingPlugin implements Plugin<Project> {
    void apply(Project project) {
        project.task('hello') << {
            println "Hello from the GreetingPlugin"
        }
    }
}
*/
sourceSets {
	main {
		java {
			srcDir 'src'
		}
		resources {
			srcDir 'resources'
		}
	}
}

buildscript {
	repositories {
		mavenLocal()
	}

	dependencies {
		classpath "com.jtransc:jtransc-gradle-plugin:0.2.5"
	}

	//apply plugin: "jtransc"
}

repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {
	//compile group: 'com.jtransc.media', name: 'jtransc-media', version: '$jtranscVersion'
	compile "com.jtransc.media:jtransc-media-lime:$jtranscVersion"
	testCompile group: 'junit', name: 'junit', version: '4.+'
}

jtransc {
	target = "haxe:js"
	output = "simple.js"
	println "jtransc!"
}

/*
println "configuring $project"
task hello << {
	println 'hello from other script'

	tasks.testJTranscTask.execute()

	project.plugins.each {
		println it
	}
}

task jtransc2 << {
	println sourceSets.main.output.classesDir
}
*/

task demo << {
	//file("build/project-dependencies").deleteDir()
	println "demo"
	subprojects.findAll().each { project ->
		println "project: $project"
		/*
		copy {
			from project.jar
			from project.configurations.runtime
			into "build/project-dependencies/jars"
		}
		*/
		println project.jar
		println project.configurations.runtime
	}
	project.buildscript.configurations.classpath.each {
		String jarName = it.getName();
		print jarName + ":"
	}

	configurations.classpath.files.each {
		println it
	}
}

demo.dependsOn build